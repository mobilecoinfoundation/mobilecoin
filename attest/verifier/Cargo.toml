[package]
name = "mc-attest-verifier"
version = "4.0.1"
authors = ["MobileCoin"]
edition = "2021"
description = '''
This crate contains necessary functions and utilities to perform verification of
remote attestation data returned by IAS.
'''

[features]
default = ["std"]
std = [
    "mc-attest-core/std",
    "mc-common/std",
    "displaydoc/std",
    "mbedtls/std",
]

# This means "use the fake SGX stuff where required"
sgx-sim = []
# This means "use the dev endpoint of Intel's Attestation Service"
ias-dev = []

[dependencies]
mc-attest-core = { path = "../core", default-features = false }
mc-common = { path = "../../common", default-features = false }
mc-sgx-css = { path = "../../sgx/css", default-features = false }
mc-sgx-types = { path = "../../sgx/types", default-features = false }

cfg-if = "1.0"
displaydoc = { version = "0.2", default-features = false }
hex_fmt = "0.3"
mbedtls = { version = "0.8.1", default-features = false, features = ["no_std_deps"] }
serde = { version = "1.0", default-features = false, features = ["alloc", "derive"] }
sha2 = { version = "0.10", default-features = false }

[dev-dependencies]
mc-util-encodings = { path = "../../util/encodings", default-features = false }

[build-dependencies]
mc-util-build-script = { path = "../../util/build/script" }
mc-util-build-sgx = { path = "../../util/build/sgx" }

cargo-emit = "0.2"
chrono = "0.4"
hex = "0.4"
lazy_static = "1.4"
rand = "0.8"
rand_hc = "0.3"

# We use mbedtls to generate certificates for simulation mode
mbedtls = "0.8.1"
mbedtls-sys-auto = "2.26.1"
