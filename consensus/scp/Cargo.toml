[package]
name = "mc-consensus-scp"
version = "5.2.3"
authors = ["MobileCoin"]
description = "Stellar Consensus Protocol"
edition = "2021"
keywords = ["SCP", "Stellar Consensus Protocol", "Consensus", "Stellar", "Byzantine"]
license = "GPL-3.0"
readme = "README.md"
rust-version = { workspace = true }

[features]
test_utils = ["mc-consensus-scp-types/test_utils"]

[dependencies]
mc-common = { path = "../../common", features = ["log"] }
mc-consensus-scp-types = { path = "types" }
mc-crypto-digestible = { path = "../../crypto/digestible", features = ["derive"] }
mc-crypto-keys = { path = "../../crypto/keys" }
mc-util-from-random = { path = "../../util/from-random" }
mc-util-serial = { path = "../../util/serial", features = ["std"] }

mockall = "0.12.1"
primitive-types = "0.12.2"
rand = "0.8"
rand_hc = "0.3"
serde = { version = "1.0", default-features = false, features = ["alloc", "derive"] }
serde_json = "1.0"

[dev-dependencies]
mc-common = { path = "../../common", features = ["loggers"] }
mc-consensus-scp-types = { path = "types", features = ["test_utils"] }
mc-util-logger-macros = { path = "../../util/logger-macros" }
mc-util-test-helper = { path = "../../util/test-helper" }

crossbeam-channel = "0.5"
maplit = "1.0.2"
serial_test = "3.0"
tempfile = "3.10"

[[test]]
name = "test_cyclic_networks"
required-features = ["test_utils"]

[[test]]
name = "test_mesh_networks"
required-features = ["test_utils"]

[[test]]
name = "test_metamesh_networks"
required-features = ["test_utils"]
