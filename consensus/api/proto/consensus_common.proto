// Copyright (c) 2018-2021 The MobileCoin Foundation

// Consensus service data types used by both client-facing and peer-facing APIs.

syntax = "proto3";
import "google/protobuf/empty.proto";
import "blockchain.proto";

package consensus_common;

/// Blockchain API shared between clients and peers.
service BlockchainAPI {
    rpc GetLastBlockInfo (google.protobuf.Empty) returns (LastBlockInfoResponse);
    rpc GetBlocks (BlocksRequest) returns (BlocksResponse);
}

// Response to a `GetLastBlockInfo` call.
message LastBlockInfoResponse {
    // Block index
    uint64 index = 1;
    // Current minimum fee
    uint64 minimum_fee = 2;
}

// Requests a range [offset, offset+limit) of Blocks.
message BlocksRequest {
    // Index of first block.
    uint64 offset = 1;

    // Maximum number of blocks.
    uint32 limit = 2;
}

// Response to a `BlocksRequest`.
message BlocksResponse {
    repeated blockchain.Block blocks = 1;
}

/// Result of ProposeTx call that cannot be represented by a built-in GRPC error code.
enum ProposeTxResult {
    Ok = 0;
    InputsProofsLengthMismatch = 10;
    NoInputs = 11;
    TooManyInputs = 12;
    InsufficientInputSignatures = 13;
    InvalidInputSignature = 14;
    InvalidTransactionSignature = 15;
    InvalidRangeProof = 16;
    InsufficientRingSize = 17;
    TombstoneBlockExceeded = 18;
    TombstoneBlockTooFar = 19;
    NoOutputs = 20;
    TooManyOutputs = 21;
    ExcessiveRingSize = 22;
    DuplicateRingElements = 23;
    UnsortedRingElements = 24;
    UnequalRingSizes = 25 [deprecated=true];
    UnsortedKeyImages = 26;
    ContainsSpentKeyImage = 27;
    DuplicateKeyImages = 28;
    DuplicateOutputPublicKey = 29;
    ContainsExistingOutputPublicKey = 30;
    MissingTxOutMembershipProof = 31;
    InvalidTxOutMembershipProof = 32;
    InvalidRistrettoPublicKey = 33;
    InvalidLedgerContext = 34;
    Ledger = 35;
    MembershipProofValidationError = 36;
    TxFeeError = 37;
    KeyError = 38;
    UnsortedInputs = 39;
}

/// Response from TxPropose RPC call.
message ProposeTxResponse {
    /// Result.
    ProposeTxResult result = 1;

    /// The number of blocks in the ledger at the time the request was received.
    uint64 block_count = 2;
}
