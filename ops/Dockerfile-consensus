# ################################ #
#  MobileCoin Consensus Validator  #
# ################################ #
FROM ubuntu:18.04 AS consensus

#
# This builds a slim runtime container based on Ubuntu 18.04 LTS for distribution of a MobileCoin Consensus Validator.
#
SHELL ["/bin/bash", "-c"]

# Update OS and install deps
#
# - All of these are runtime dependencies of both aesm_service and mobilenode.
# - This is run as a one-off in order to reduce the number of layers in the resulting image
#
RUN apt-get update -q -q && \
 apt-get upgrade --yes --force-yes && \
 apt-get install --yes --force-yes \
  build-essential \
  ca-certificates \
  cmake \
  gettext \
  libc6 \
  libcurl4 \
  libgcc-7-dev \
  libgcc1 \
  libnghttp2-14 \
  libprotobuf-c1 \
  libprotobuf10 \
  libstdc++6 \
  rsync \
  supervisor \
  tar \
  wget \
  zlib1g && \
 rm -rf /var/cache/apt && \
 rm -rf /var/lib/apt/lists/*

# Add grpc_health_probe for healthcheck/liveness probes
RUN GRPC_HEALTH_PROBE_VERSION=v0.3.2 && \
    wget -qO/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64 && \
    chmod +x /bin/grpc_health_probe

# Install SGX
RUN mkdir -p /tmp/sgx-debs
WORKDIR /tmp/sgx-debs
RUN wget -nv \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/libs/libsgx-ae-qe3/libsgx-ae-qe3_1.5.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/libs/libsgx-enclave-common/libsgx-enclave-common_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/libs/libsgx-epid/libsgx-epid_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/libs/libsgx-launch/libsgx-launch_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/libs/libsgx-quote-ex/libsgx-quote-ex_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/libs/libsgx-uae-service/libsgx-uae-service_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/libs/libsgx-urts/libsgx-urts_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/utils/libsgx-ae-epid/libsgx-ae-epid_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/utils/libsgx-ae-le/libsgx-ae-le_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/utils/libsgx-ae-pce/libsgx-ae-pce_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/utils/libsgx-aesm-pce-plugin/libsgx-aesm-pce-plugin_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/utils/libsgx-aesm-ecdsa-plugin/libsgx-aesm-ecdsa-plugin_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/utils/libsgx-aesm-epid-plugin/libsgx-aesm-epid-plugin_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/utils/libsgx-aesm-launch-plugin/libsgx-aesm-launch-plugin_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/utils/libsgx-aesm-quote-ex-plugin/libsgx-aesm-quote-ex-plugin_2.9.100.2-bionic1_amd64.deb \
https://download.01.org/intel-sgx/sgx-linux/2.9/distro/ubuntu18.04-server/debian_pkgs/utils/sgx-aesm-service/sgx-aesm-service_2.9.100.2-bionic1_amd64.deb

RUN dpkg --install /tmp/sgx-debs/*.deb

WORKDIR /
RUN rm -rf /tmp/sgx-debs

COPY bin/libconsensus-enclave.signed.so /usr/bin/
COPY bin/consensus-service /usr/bin/
COPY bin/ledger-distribution /usr/bin/
COPY bin/mc-admin-http-gateway /usr/bin/
COPY bin/mc-ledger-migration /usr/bin/

# Q: Why not use NODE_LEDGER_DIR here?
# A: The ENV dictates where the app actually looks, and the ARG sets
#    the default ENV value, but the origin_data install dir should
#    remain constant, and image builds may make that location their
#    default. -- jmc
ARG ORIGIN_DATA_DIR
COPY ${ORIGIN_DATA_DIR}/ledger /var/lib/mobilecoin/origin_data

COPY entrypoints/consensus_validator.sh /usr/bin/entrypoint.sh

# Set default NODE_LEDGER_DIR to use ORIGIN_DATA_DIR, but override if docker run if intent is to preserve origin
ENV NODE_LEDGER_DIR "/var/lib/mobilecoin/origin_data"

# Put arg and env configuration at the end when possible to improve use of docker layer caching
ENV NODE_MANAGEMENT_PORT 8000
ENV NODE_CLIENT_PORT 3223
ENV NODE_CONSENSUS_PORT 8443
ARG BRANCH
ENV BRANCH "${BRANCH}"
ARG AWS_ACCESS_KEY_ID
ENV AWS_ACCESS_KEY_ID "${AWS_ACCESS_KEY_ID}"
ARG AWS_SECRET_ACCESS_KEY
ENV AWS_SECRET_ACCESS_KEY "${AWS_SECRET_ACCESS_KEY}"
ARG AWS_PATH
ENV AWS_PATH "${AWS_PATH}"
ENV RUST_LOG "debug"
ENV RUST_BACKTRACE "full"
ENV RUST_LOG_STYLE "never"

EXPOSE $NODE_CLIENT_PORT
EXPOSE $NODE_CONSENSUS_PORT
EXPOSE $NODE_MANAGEMENT_PORT

ENTRYPOINT ["entrypoint.sh"]
