[package]
name = "mc-crypto-dalek"
version = "4.1.0-pre0"
authors = ["MobileCoin"]
description = "MobileCoin Dalek Crypto Configurator Package"
edition = "2021"
license = "Apache-2.0"
readme = "README.md"
rust-version = { workspace = true }

[features]
serde = [ "curve25519-dalek/serde", "ed25519-dalek/serde" ]
alloc = [ "curve25519-dalek/alloc", "ed25519-dalek/alloc" ]

# `default` feature enables curve25519-dalek target detection for x86_64 with and without AVX
default = [ "serde", "alloc", "mc-crypto-dalek-backend-u64/default", "mc-crypto-dalek-backend-simd/default" ]

[dependencies]
curve25519-dalek = { version = "4.0.0-pre.2", default-features = false, features = ["nightly"] }
ed25519-dalek = { version = "2.0.0-pre.1", default-features = false, features = ["nightly"]  }
x25519-dalek = { version = "2.0.0-pre.2", default-features = false, features = ["nightly"] }

# We can't have per-target-features, but we can have per-target dependencies with feature gates...
# This is a wild hack so we can magically pick up backends while allowing them to be disabled when required.
# if `mc-crypto-dalek/default` is selected we'll pull in the avx or u64 backends based on the target,
# otherwise backend selection is up to the user

[target.'cfg(any(target_feature = "avx2", target_feature = "avx"))'.dependencies]
mc-crypto-dalek-backend-simd = { path = "./simd", default_features = false }

[target.'cfg(all(not(any(target_feature = "avx2", target_feature = "avx"))))'.dependencies]
mc-crypto-dalek-backend-u64 = { path = "./u64", default_features = false }
