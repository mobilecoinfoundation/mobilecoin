apiVersion: v1
kind: ConfigMap
metadata:
  name: supervisor-ledger-dist-node1
  namespace: NETWORKNAME
data:
  ledger_dist.conf: |
    [program:ledger-distribution]
    command=/usr/bin/ledger-distribution
      --dest s3://mobilecoin.chain/node1.NETWORKNAME.mobilecoin.com
      --ledger-path /ledger

    stdout_logfile=/dev/fd/1
    stdout_logfile_maxbytes=0
    stderr_logfile=/dev/fd/2
    stderr_logfile_maxbytes=0
    autorestart=true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: supervisor-admin-http-gw-node1
  namespace: NETWORKNAME
data:
  admin_http_gw.conf: |
    [program:mc-admin-http-gateway]
    command=/usr/bin/mc-admin-http-gateway
      --listen-host 0.0.0.0
      --listen-port 8000
      --admin-uri insecure-mca://127.0.0.1:8001/

    stdout_logfile=/dev/fd/1
    stdout_logfile_maxbytes=0
    stderr_logfile=/dev/fd/2
    stderr_logfile_maxbytes=0
    autorestart=true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: supervisor-consensus-node1
  namespace: NETWORKNAME
data:
  consensus-service-node.conf: |
    [program:consensus-service]
    command=/usr/bin/consensus-service
      --client-responder-id node1.NETWORKNAME.mobilecoin.com:443
      --peer-responder-id peer1.NETWORKNAME.mobilecoin.com:443
      --peer-listen-uri=mcp://0.0.0.0:8443/?tls-chain=/certs/tls.crt&tls-key=/certs/tls.key
      --client-listen-uri=mc://0.0.0.0:3223/?tls-chain=/certs/tls.crt&tls-key=/certs/tls.key
      --admin-listen-uri=insecure-mca://127.0.0.1:8001/
      --network /config/network.toml
      --ledger-path /ledger
      --ias-spid %(ENV_PROD_IAS_SPID)s
      --ias-api-key %(ENV_PROD_IAS_API_KEY)s
      --msg-signer-key %(ENV_NODE1_SIGNER_KEY)s
      --sealed-block-signing-key %(ENV_SEALED_BLOCK_SIGNING_KEY)s

    stdout_logfile=/dev/fd/1
    stdout_logfile_maxbytes=0
    stderr_logfile=/dev/fd/2
    stderr_logfile_maxbytes=0
    autorestart=true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-consensus-node1
  namespace: NETWORKNAME
data:
  network.toml: |
    broadcast_peers = [
        "mcp://peer2.NETWORKNAME.mobilecoin.com:443/?consensus-msg-key=MCowBQYDK2VwAyEA7i8HyecUp-0lcw5c8yP3BNP_R6JRlpXoxjJD-gWcqUE=",
        "mcp://peer3.NETWORKNAME.mobilecoin.com:443/?consensus-msg-key=MCowBQYDK2VwAyEAHzaqHvf66h03cd3-Ny4VOYoa0zhcnak8tKTb3P0gMHE=",
        "mcp://peer4.NETWORKNAME.mobilecoin.com:443/?consensus-msg-key=MCowBQYDK2VwAyEAYYmxZMX2B4kkhfPap8NrV4JMp_s6j06oxwlMD0DAiC8=",
        "mcp://peer5.NETWORKNAME.mobilecoin.com:443/?consensus-msg-key=MCowBQYDK2VwAyEA0XQ0Hy_nKTlPyxD7LYBEWVoayf_JfUsIaYy7olOZhNM=",
    ]

    tx_source_urls = [
        "https://s3-us-west-1.amazonaws.com/mobilecoin.chain/node2.NETWORKNAME.mobilecoin.com/",
        "https://s3-us-west-1.amazonaws.com/mobilecoin.chain/node3.NETWORKNAME.mobilecoin.com/",
        "https://s3-us-west-1.amazonaws.com/mobilecoin.chain/node4.NETWORKNAME.mobilecoin.com/",
        "https://s3-us-west-1.amazonaws.com/mobilecoin.chain/node5.NETWORKNAME.mobilecoin.com/",
    ]

    quorum_set = { threshold = 3, members = [
        { type = "Node", args = "peer2.NETWORKNAME.mobilecoin.com:443" },
        { type = "Node", args = "peer3.NETWORKNAME.mobilecoin.com:443" },
        { type = "Node", args = "peer4.NETWORKNAME.mobilecoin.com:443" },
        { type = "Node", args = "peer5.NETWORKNAME.mobilecoin.com:443" },
    ] }
---
# Node1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node1
  namespace: NETWORKNAME
  labels:
    app: mobilenode-NETWORKNAME
    nodename: node1
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mobilenode-NETWORKNAME
      nodename: node1
  template:
    metadata:
      labels:
        app: mobilenode-NETWORKNAME
        nodename: node1
    spec:
      # Need better node-selector semantics. This depends on agentpool naming
      nodeSelector:
        builder-node: "false"
        sgx-enabled-node: "true"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - mobilenode-NETWORKNAME
              topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        - name: docker-credentials
      initContainers:
        - name: install-ledger-data
          image: mobilecoin/node_hw:DOCKER_TAG
          imagePullPolicy: IfNotPresent
          command: [ "/bin/bash" ]
          args:
            - -c
            - |
              set -x
              rm -rf /ledger/*
              cp -r /var/lib/mobilecoin/origin_data/data.mdb /ledger
          volumeMounts:
            - name: ledger-db-dir
              mountPath: /ledger

      containers:

        - name: node
          image: mobilecoin/node_hw:DOCKER_TAG
          imagePullPolicy: IfNotPresent
          # Override entrypoint for this container
          command: [ "/usr/bin/supervisord" ]
          ports:
            - name: cns-client
              containerPort: 3223
            - name: cns-port
              containerPort: 8443
            - name: cns-mgmt
              containerPort: 8000
          livenessProbe:
            exec:
              command:
                - /bin/grpc_health_probe
                - -tls
                - -tls-ca-cert
                - /certs/ca.crt
                - -tls-server-name
                - node1.NETWORKNAME.mobilecoin.com
                - -addr=:8443
            failureThreshold: 3
            periodSeconds: 30
          readinessProbe:
            exec:
              command:
                - /bin/grpc_health_probe
                - -tls
                - -tls-ca-cert
                - /certs/ca.crt
                - -tls-server-name
                - node1.NETWORKNAME.mobilecoin.com
                - -addr=:8443
            # This will need to be updated as initial sync and startup times increase.
            failureThreshold: 30
            periodSeconds: 30
          env:
            # Contents of /opt/intel/sgxsdk/environment and AESM requirements
            - name: "PATH"
              value: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/intel/sgxsdk/bin:/opt/intel/sgxsdk/bin/x64"
            # Rust env settings
            - name: "RUST_BACKTRACE"
              value: "1"
            - name: "RUST_LOG"
              value: "debug,rustls=warn,hyper=warn,tokio_reactor=warn,mio=warn,want=warn,reqwest=warn,rusoto_core=error,rusoto_signature=error,h2=error,rocket=warn,<unknown>=warn"
            - name: "SGX_MODE"
              value: "HW"
            - name: "IAS_MODE"
              value: "DEV"
            - name: LOCAL_NODE_ID
              value: "peer1.NETWORKNAME.mobilecoin.com:443"
            - name: MC_LOG_UDP_JSON
              value: "127.0.0.1:16666"
            - name: MC_LOG_EXTRA_CONTEXT
              value: "mc.local_node_id=$(LOCAL_NODE_ID)"
            - name: MC_BRANCH
              value: "NETWORKNAME"
            - name: AWS_PATH
              value: "AWS_PATH=s3://mobilecoin.chain/node1.NETWORKNAME.mobilecoin.com"
            - name: AWS_REGION
              value: "us-west-1"
            - name: PROD_IAS_SPID
              valueFrom:
                secretKeyRef:
                  name: prod-ias-keys
                  key: spid
            - name: PROD_IAS_API_KEY
              valueFrom:
                secretKeyRef:
                  name: prod-ias-keys
                  key: primary-key
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-creds-env
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-creds-env
                  key: aws-secret-access-key
            - name: NODE1_SIGNER_KEY
              valueFrom:
                secretKeyRef:
                  name: node-signer-keys
                  key: node1
            - name: "SEALED_BLOCK_SIGNING_KEY"
              value: "/keys/sealed-block-signing-key"
          volumeMounts:
            - name: aesm-socket-dir
              mountPath: /var/run/aesmd
            - name: config-dir
              mountPath: /config
            - name: ledger-db-dir
              mountPath: /ledger
            - name: keys-dir
              mountPath: /keys
            - name: node-cert
              mountPath: /certs
              readOnly: true
            - name: supervisor-conf
              mountPath: /etc/supervisor/conf.d
              readOnly: true
          resources:
            limits:
              intel.com/sgx: 5000
            requests:
              intel.com/sgx: 5000

      volumes:
        - name: ledger-db-dir
          emptyDir: {}
        - name: config-dir
          configMap:
            name: config-consensus-node1
        - name: keys-dir
          emptyDir: {}
        - name: aesm-socket-dir
          emptyDir: {}
        - name: node-cert
          secret:
            secretName: node1-peer-tls
        - name: supervisor-conf
          projected:
            sources:
            - configMap:
                name: supervisor-daemon-config
            - configMap:
                name: supervisor-sgx-config
            - configMap:
                name: supervisor-consensus-node1
            - configMap:
                name: supervisor-ledger-dist-node1
            - configMap:
                name: supervisor-admin-http-gw-node1
