[package]
name = "mc-transaction-core"
version = "4.1.0-pre0"
authors = ["MobileCoin"]
edition = "2021"
license = "Apache-2.0"
readme = "README.md"
rust-version = { workspace = true }

[dependencies]
# External dependencies
aes = "0.8.2"
crc = { version = "3.0.0", default-features = false }
ctr = "0.9.2"
curve25519-dalek = { version = "4.0.0-pre.2", default-features = false, features = ["nightly"] }
displaydoc = { version = "0.2", default-features = false }
generic-array = { version = "0.14", features = ["serde", "more_lengths"] }
hex_fmt = "0.3"
hkdf = "0.12"
lazy_static = { version = "1.4.0", features = ["spin_no_std"] }
merlin = { version = "3.0", default-features = false }
prost = { version = "0.11", default-features = false, features = ["prost-derive"] }
rand_core = { version = "0.6", default-features = false }
serde = { version = "1.0", default-features = false, features = ["alloc", "derive"] }
sha2 = { version = "0.10", default-features = false }
subtle = { version = "2.4.1", default-features = false, features = ["i128"] }
zeroize = { version = "1", default-features = false }

# MobileCoin dependencies
mc-account-keys = { path = "../../account-keys" }
mc-common = { path = "../../common", default-features = false }
mc-crypto-box = { path = "../../crypto/box" }
mc-crypto-dalek = { path = "../../crypto/dalek" }
mc-crypto-digestible = { path = "../../crypto/digestible", features = ["dalek", "derive"] }
mc-crypto-hashes = { path = "../../crypto/hashes" }
mc-crypto-keys = { path = "../../crypto/keys", default-features = false }
mc-crypto-multisig = { path = "../../crypto/multisig", default-features = false }
mc-crypto-ring-signature = { path = "../../crypto/ring-signature", default-features = false, features = [ "alloc", "serde", "prost" ] }
mc-crypto-ring-signature-signer = { path = "../../crypto/ring-signature/signer", default-features = false, features = [ "alloc", "serde" ] }
mc-transaction-types = { path = "../types" }
mc-util-from-random = { path = "../../util/from-random" }
mc-util-repr-bytes = { path = "../../util/repr-bytes" }
mc-util-serial = { path = "../../util/serial" }
mc-util-u64-ratio = { path = "../../util/u64-ratio" }
mc-util-zip-exact = { path = "../../util/zip-exact" }

[target.'cfg(target_feature = "avx2")'.dependencies]
bulletproofs-og = { version = "3.0.0-pre.1", default-features = false, features = ["avx2_backend"] }

[target.'cfg(not(target_feature = "avx2"))'.dependencies]
bulletproofs-og = { version = "3.0.0-pre.1", default-features = false }

[dev-dependencies]
assert_matches = "1.5"

mc-crypto-digestible-test-utils = { path = "../../crypto/digestible/test-utils" }
mc-crypto-ring-signature = { path = "../../crypto/ring-signature", features = ["proptest"] }
mc-fog-report-validation-test-utils = { path = "../../fog/report/validation/test-utils" }
mc-ledger-db = { path = "../../ledger/db", features = ["test_utils"] }
mc-transaction-builder = { path = "../../transaction/builder", features = ["test-only"] }
mc-transaction-core-test-utils = { path = "../../transaction/core/test-utils" }
mc-util-serial = { path = "../../util/serial", features = ["std"] }
mc-util-test-helper = { path = "../../util/test-helper" }
proptest = { version = "1.1", default-features = false, features = ["default-code-coverage"] }
rand = "0.8"
