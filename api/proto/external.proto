// Copyright (c) 2018-2020 MobileCoin Inc.

// MUST BE KEPT IN SYNC WITH RUST CODE!

syntax = "proto3";

package external;

option java_package = "com.mobilecoin.api";
option java_outer_classname = "MobileCoinAPI";

///////////////////////////////////////////////////////////////////////////////
// `keys` crate
///////////////////////////////////////////////////////////////////////////////

message RistrettoPublic {
    bytes data = 1;
}

message RistrettoPrivate {
    bytes data = 1;
}

message CompressedRistretto {
    bytes data = 1;
}

message CurveScalar {
    bytes data = 1;
}

message KeyImage {
    bytes data = 1;
}

message Ed25519Public {
    bytes data = 1;
}

message Ed25519Signature {
    bytes data = 1;
}


///////////////////////////////////////////////////////////////////////////////
// `trasaction/core` crate
///////////////////////////////////////////////////////////////////////////////

message Range {
    uint64 from = 1;
    uint64 to = 2;
}

message TxOutMembershipHash {
    bytes data = 1;
}

message TxOutMembershipElement {
    Range range = 1;
    TxOutMembershipHash hash = 2;
}

message TxOutMembershipProof {
    uint64 index = 1;
    uint64 highest_index = 2;
    repeated TxOutMembershipElement elements = 3;
}

// Amount.
message Amount {
    // A Pedersen commitment `v*G + s*H`
    CompressedRistretto commitment = 1;

    // `masked_value = value XOR_8 Blake2B("value_mask" || shared_secret)`
    uint64 masked_value = 2;
}

message EncryptedFogHint {
    bytes data = 1;
}

// A Transaction Output.
message TxOut {
    // Amount.
    Amount amount = 1;

    // Public key.
    RistrettoPublic target_key = 2;

    // Public key.
    RistrettoPublic public_key = 3;

    // 128 byte encrypted fog hint
    EncryptedFogHint e_account_hint = 4;
}

message TxIn {
    // "Ring" of inputs, one of which is actually being spent.
    repeated TxOut ring = 1;

    // Proof that each TxOut in `ring` is in the ledger.
    repeated TxOutMembershipProof proofs = 2;
}

// A transaction that a client submits to consensus
message TxPrefix {
    // Transaction inputs.
    repeated TxIn inputs = 1;

    // Transaction outputs.
    repeated TxOut outputs = 2;

    // Fee paid to the foundation for this transaction
    uint64 fee = 3;

    // The block index at which this transaction is no longer valid.
    uint64 tombstone_block = 4;
}

message RingMLSAG {
    CurveScalar c_zero = 1;
    repeated CurveScalar responses = 2;
    KeyImage key_image = 3;
}

message SignatureRctBulletproofs {
    repeated RingMLSAG ring_signatures = 1;
    repeated CompressedRistretto pseudo_output_commitments = 2;
    bytes range_proofs = 3;
}

message Tx {
    // The actual contents of the transaction.
    TxPrefix prefix = 1;

    // The RingCT signature on the prefix.
    SignatureRctBulletproofs signature = 2;
}

message TxHash {
    // Hash of a single transaction.
    bytes hash = 1;
}
