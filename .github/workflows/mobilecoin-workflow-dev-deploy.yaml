# Copyright (c) 2018-2022 The MobileCoin Foundation
#
# MobileCoin Core projects - Reusable Workflow - Deploy core apps to to the development namespace.

name: mobilecoin-workflow-dev-deploy

on:
  workflow_call:
    inputs:
      namespace:
        description: "Target Namespace"
        type: string
        required: true
      version:
        description: "Chart Version"
        type: string
        required: true
      docker_image_org:
        description: "Docker Image Org"
        type: string
        required: false
        default: docker.io/mobilecoin
      chart_repo:
        description: "Chart Repo URL"
        type: string
        required: false
        default: https://harbor.mobilecoin.com/chartrepo/mobilecoinfoundation-public
      ingest_color:
        description: "Fog Ingest blue/green"
        type: string
        required: true
      block_version:
        description: "block_version"
        type: string
        required: true
      minimum_block:
        description: "The minimum block height before the enviroment is ready"
        type: string
        required: false
        default: "500"
    secrets:
      DEV_RANCHER_CLUSTER:
        description: "Rancher cluster name"
        required: true
      DEV_RANCHER_URL:
        description: "Rancher server URL"
        required: true
      DEV_RANCHER_TOKEN:
        description: "Rancher access token"
        required: true

env:
  FLIPSIDE: ${{ inputs.ingest_color == 'blue' && 'green' || 'blue' }}
  VALUES_BASE_PATH: .tmp/values

jobs:
  setup-environment:
    uses: ./.github/workflows/mobilecoin-workflow-dev-setup-environment.yaml
    with:
      block_version: ${{ inputs.block_version }}
      chart_repo: ${{ inputs.chart_repo }}
      namespace: ${{ inputs.namespace }}
      version: ${{ inputs.version }}
    secrets: inherit

  consensus-deploy:
    needs:
    - setup-environment
    runs-on: [self-hosted, Linux, small]
    strategy:
      matrix:
        release_name:
        - consensus-node-1
        - consensus-node-2
        - consensus-node-3
    steps:
    # use values file because intel.com/sgx is hard to escape on the --set option.
    - name: Generate consensus-node values file
      run: |
        mkdir -p "${VALUES_BASE_PATH}"
        cat <<EOF > "${VALUES_BASE_PATH}/consensus-node-values.yaml"
        image:
          org: ${{ inputs.docker_image_org }}
        global:
          certManagerClusterIssuer: google-public-ca
        node:
          resources:
            limits:
              intel.com/sgx: 2000
            requests:
              intel.com/sgx: 2000
          persistence:
            enabled: false
          ingress:
            clientAttest:
              rateLimits:
                enabled: false
        EOF

    - name: Deploy Consensus nodes
      uses: mobilecoinofficial/gha-k8s-toolbox@v1
      with:
        action: helm-deploy
        chart_repo: ${{ inputs.chart_repo }}
        chart_name: consensus-node
        chart_version: ${{ inputs.version }}
        chart_values: ${{ env.VALUES_BASE_PATH }}/consensus-node-values.yaml
        chart_wait_timeout: 10m
        release_name: ${{ matrix.release_name }}
        namespace: ${{ inputs.namespace }}
        rancher_cluster: ${{ secrets.DEV_RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.DEV_RANCHER_URL }}
        rancher_token: ${{ secrets.DEV_RANCHER_TOKEN }}

  mobilecoind-deploy:
    needs:
    - consensus-deploy
    runs-on: [self-hosted, Linux, small]
    steps:
    - name: Mobilecoind nodes
      uses: mobilecoinofficial/gha-k8s-toolbox@v1
      with:
        action: helm-deploy
        chart_repo: ${{ inputs.chart_repo }}
        chart_name: mobilecoind
        chart_version: ${{ inputs.version }}
        chart_set: |
          --set=image.org=${{ inputs.docker_image_org }}
        chart_wait_timeout: 5m
        release_name: mobilecoind
        namespace: ${{ inputs.namespace }}
        rancher_cluster: ${{ secrets.DEV_RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.DEV_RANCHER_URL }}
        rancher_token: ${{ secrets.DEV_RANCHER_TOKEN }}

  # run two copies of fog-report a/b
  fog-report-deploy-a:
    needs:
    - consensus-deploy
    runs-on: [self-hosted, Linux, small]
    steps:
    - name: Generate fog-report values file
      run: |
        mkdir -p "${VALUES_BASE_PATH}"
        cat <<EOF > "${VALUES_BASE_PATH}/fog-report-values.yaml"
        image:
          org: ${{ inputs.docker_image_org }}

        mobilecoin:
          network: ${{ inputs.namespace }}
          partner: dev

        fogReport:
          hosts:
          - fog.${{ inputs.namespace }}.development.mobilecoin.com
          ingress:
            common:
              blocklist:
                enabled: false
              tls:
                clusterIssuer: google-public-ca
          externalSecrets:
            signingCert:
              name: fog-report-signing-cert-a

    - name: Deploy fog-report-a
      uses: mobilecoinofficial/gha-k8s-toolbox@v1
      with:
        action: helm-deploy
        chart_repo: ${{ inputs.chart_repo }}
        chart_name: fog-report
        chart_version: ${{ inputs.version }}
        chart_wait_timeout: 10m
        chart_values: ${{ env.VALUES_BASE_PATH }}/fog-report-values.yaml
        release_name: fog-report-a
        namespace: ${{ inputs.namespace }}
        rancher_cluster: ${{ secrets.DEV_RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.DEV_RANCHER_URL }}
        rancher_token: ${{ secrets.DEV_RANCHER_TOKEN }}

  fog-report-deploy-b:
    needs:
    - consensus-deploy
    runs-on: [self-hosted, Linux, small]
    steps:
    - name: Generate fog-report-b values file
      run: |
        mkdir -p "${VALUES_BASE_PATH}"
        cat <<EOF > "${VALUES_BASE_PATH}/fog-report-values.yaml"
        image:
          org: ${{ inputs.docker_image_org }}

        mobilecoin:
          network: ${{ inputs.namespace }}
          partner: dev

        fogReport:
          hosts:
          - fog-b.${{ inputs.namespace }}.development.mobilecoin.com
          - fog-report-b.${{ inputs.namespace }}.development.mobilecoin.com
          ingress:
            common:
              blocklist:
                enabled: false
              tls:
                clusterIssuer: google-public-ca
          externalSecrets:
            signingCert:
              name: fog-report-signing-cert-b

    - name: Deploy fog-report-b
      uses: mobilecoinofficial/gha-k8s-toolbox@v1
      with:
        action: helm-deploy
        chart_repo: ${{ inputs.chart_repo }}
        chart_name: fog-report
        chart_version: ${{ inputs.version }}
        chart_wait_timeout: 10m
        chart_values: ${{ env.VALUES_BASE_PATH }}/fog-report-values.yaml
        release_name: fog-report-b
        namespace: ${{ inputs.namespace }}
        rancher_cluster: ${{ secrets.DEV_RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.DEV_RANCHER_URL }}
        rancher_token: ${{ secrets.DEV_RANCHER_TOKEN }}

  fog-view-deploy:
    needs:
    - consensus-deploy
    runs-on: [self-hosted, Linux, small]
    steps:
    - name: Generate fog-view values file
      run: |
        mkdir -p "${VALUES_BASE_PATH}"
        cat <<EOF > "${VALUES_BASE_PATH}/fog-view-values.yaml"
        image:
          org: ${{ inputs.docker_image_org }}

        mobilecoin:
          network: ${{ inputs.namespace }}
          partner: dev

        fogView:
          router:
            hosts:
            - partner: a
              responderID: fog.${{ inputs.namespace }}.development.mobilecoin.com
            - partner: b
              responderID: fog-b.${{ inputs.namespace }}.development.mobilecoin.com
            ingress:
              common:
                blocklist:
                  enabled: false
                tls:
                  clusterIssuer: google-public-ca

    - name: Deploy fog-view
      uses: mobilecoinofficial/gha-k8s-toolbox@v1
      with:
        action: helm-deploy
        chart_repo: ${{ inputs.chart_repo }}
        chart_name: fog-view
        chart_version: ${{ inputs.version }}
        chart_wait_timeout: 10m
        chart_values: ${{ env.VALUES_BASE_PATH }}/fog-view-values.yaml
        release_name: fog-view
        namespace: ${{ inputs.namespace }}
        rancher_cluster: ${{ secrets.DEV_RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.DEV_RANCHER_URL }}
        rancher_token: ${{ secrets.DEV_RANCHER_TOKEN }}

  fog-ledger-deploy:
    needs:
    - consensus-deploy
    runs-on: [self-hosted, Linux, small]
    steps:
    - name: Generate fog-ledger values file
      run: |
        mkdir -p "${VALUES_BASE_PATH}"
        cat <<EOF > "${VALUES_BASE_PATH}/fog-ledger-values.yaml"
        image:
          org: ${{ inputs.docker_image_org }}

        mobilecoin:
          network: ${{ inputs.namespace }}
          partner: dev

        fogLedger:
          router:
            hosts:
            - partner: a
              responderID: fog.${{ inputs.namespace }}.development.mobilecoin.com
            - partner: b
              responderID: fog-b.${{ inputs.namespace }}.development.mobilecoin.com
            persistance:
              enabled: false
            ingress:
              common:
                blocklist:
                  enabled: false
                tls:
                  clusterIssuer: google-public-ca
          store:
            persistance:
              enabled: false


    - name: Deploy fog-ledger
      uses: mobilecoinofficial/gha-k8s-toolbox@v1
      with:
        action: helm-deploy
        chart_repo: ${{ inputs.chart_repo }}
        chart_name: fog-ledger
        chart_version: ${{ inputs.version }}
        chart_wait_timeout: 10m
        chart_values: ${{ env.VALUES_BASE_PATH }}/fog-ledger-values.yaml
        release_name: fog-ledger
        namespace: ${{ inputs.namespace }}
        rancher_cluster: ${{ secrets.DEV_RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.DEV_RANCHER_URL }}
        rancher_token: ${{ secrets.DEV_RANCHER_TOKEN }}

  fog-ingest-deploy:
    needs:
    - consensus-deploy
    runs-on: [self-hosted, Linux, small]
    steps:
    - name: Generate fog-ingest values file
      run: |
        mkdir -p "${VALUES_BASE_PATH}"
        cat <<EOF > "${VALUES_BASE_PATH}/fog-ingest-values.yaml"
        image:
          org: ${{ inputs.docker_image_org }}
        fogIngest:
          resources:
            limits:
              intel.com/sgx: 2000
            requests:
              intel.com/sgx: 2000
          persistence:
            enabled: false
        EOF

    - name: Deploy fog-ingest
      uses: mobilecoinofficial/gha-k8s-toolbox@v1.0.13
      with:
        action: helm-deploy
        chart_repo: ${{ inputs.chart_repo }}
        chart_name: fog-ingest
        chart_version: ${{ inputs.version }}
        chart_wait_timeout: 10m
        chart_values: ${{ env.VALUES_BASE_PATH }}/fog-ingest-values.yaml
        release_name: fog-ingest-${{ inputs.ingest_color }}
        namespace: ${{ inputs.namespace }}
        rancher_cluster: ${{ secrets.DEV_RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.DEV_RANCHER_URL }}
        rancher_token: ${{ secrets.DEV_RANCHER_TOKEN }}

    - name: Run fog-recovery database migrations
      uses: mobilecoinofficial/gha-k8s-toolbox@v1.0.13
      with:
        action: toolbox-exec
        ingest_color: ${{ inputs.ingest_color }}
        namespace: ${{ inputs.namespace }}
        rancher_cluster: ${{ secrets.DEV_RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.DEV_RANCHER_URL }}
        rancher_token: ${{ secrets.DEV_RANCHER_TOKEN }}
        command: |
          fog-sql-recovery-db-migrations

    - name: Activate primary ingest
      uses: mobilecoinofficial/gha-k8s-toolbox@v1.0.13
      with:
        action: fog-ingest-activate
        ingest_color: ${{ inputs.ingest_color }}
        namespace: ${{ inputs.namespace }}
        rancher_cluster: ${{ secrets.DEV_RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.DEV_RANCHER_URL }}
        rancher_token: ${{ secrets.DEV_RANCHER_TOKEN }}

    - name: Delete retired flipside ingest (if exists)
      uses: mobilecoinofficial/gha-k8s-toolbox@v1.0.13
      with:
        action: helm-release-delete
        namespace: ${{ inputs.namespace }}
        release_name: fog-ingest-${{ env.FLIPSIDE }}
        rancher_cluster: ${{ secrets.DEV_RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.DEV_RANCHER_URL }}
        rancher_token: ${{ secrets.DEV_RANCHER_TOKEN }}

  wait-for-up:
    needs:
    - fog-ingest-deploy
    - fog-view-deploy
    - fog-ledger-deploy
    - fog-report-deploy-a
    - fog-report-deploy-b
    runs-on: [self-hosted, Linux, small]
    steps:
    - name: Check end points up.
      uses: mobilecoinofficial/gha-k8s-toolbox@v1.0.13
      with:
        action: toolbox-exec
        ingest_color: ${{ inputs.ingest_color }}
        namespace: ${{ inputs.namespace }}
        rancher_cluster: ${{ secrets.DEV_RANCHER_CLUSTER }}
        rancher_url: ${{ secrets.DEV_RANCHER_URL }}
        rancher_token: ${{ secrets.DEV_RANCHER_TOKEN }}
        command: |
          /test/check-env-status.sh --minimum-block ${{ inputs.minimum_block }} \
              --namespace ${{ inputs.namespace }}
