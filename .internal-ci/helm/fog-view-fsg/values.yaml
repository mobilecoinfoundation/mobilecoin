imagePullSecrets:
- name: docker-credentials

# Pods share the image tag.
image:
  org: mobilecoin
  tag: '' # Overrides the image tag whose default is the chart appVersion.

# Mobilecoin network instance
mobilecoin:
  network: ''
  partner: ''

fogView:
  # Stack configurations by network.
  stackConfig:
    # Affinity to a specific topology.kubernetes.io/zone= label value.
    # zone will be "region-zoneId" format like "italynorth-1"
    zone: ''
    # color label of the fogShardGenerator stack. blue|green
    color: 'blue'

    network:
      # Assume default is a dev network. We can always define a "network" value if needed.
      default:
        shardSize: 20_000
        exceedBlockHeightBy: 5_000
        shardOverlap: 0
        count: 2
        blockHeightRetrieval:
          blockCountURL: 'https://node1.{{ .Release.Namespace }}.development.mobilecoin.com/gw/consensus_common.BlockchainAPI/GetLastBlockInfo'
          responseJQ: '.index'
          queryInterval: 1m
          requestBody: ''
      test:
        shardSize: 400_000
        exceedBlockHeightBy: 10_000
        shardOverlap: 0
        count: 2
        blockHeightRetrieval:
          blockCountURL: https://node1.test.mobilecoin.com/gw/consensus_common.BlockchainAPI/GetLastBlockInfo
          responseJQ: '.index'
          queryInterval: 5m
          requestBody: ''
      main:
        shardSize: 400_000
        exceedBlockHeightBy: 10_000
        shardOverlap: 0
        count: 3
        blockHeightRetrieval:
          blockCountURL: https://node1.prod.mobilecoinww.com/gw/consensus_common.BlockchainAPI/GetLastBlockInfo
          responseJQ: '.index'
          queryInterval: 5m
          requestBody: ''

  router:
    ### list of fog-ledger-router hostnames (client responder ID)

    responderID: ''

    replicaCount: 1

    image:
      org: ''
      name: fogview
      pullPolicy: Always

    resources:
      limits:
        sgx.intel.com/epc: 512Ki
        memory: 3Gi
      requests:
        sgx.intel.com/epc: 512Ki
        memory: 3Gi
        cpu: 1100m

    nodeSelector:
      dcap: 'true'

    tolerations:
    - key: dcap
      operator: Equal
      value: 'true'
      effect: NoSchedule

    # disable affinity rules for single node testing
    podManagementPolicy: Parallel
    # affinityEnabled: true
    # topologySpreadConstraintsEnabled: true

    rust:
      backtrace: full
      log: info,rustls=warn,hyper=warn,tokio_reactor=warn,mio=warn,want=warn,reqwest=warn,rusoto_core=error,rusoto_signature=error,h2=error,rocket=warn,<unknown>=warn

    podAnnotations:
      fluentbit.io/include: 'true' # collect logs with fluentbit
      fluentbit.io/exclude-jaeger-agent: 'true'
      # This is the container name that needs to use sgx resources
      sgx.intel.com/quote-provider: fog-view-router

    ingress:
      enabled: true
      common:
        # Set a static salt for the dynamic cookie. See helpers for more info.
        # cookieSalt: ''
        tls:
          clusterIssuer: letsencrypt-production-http
        blocklist:
          enabled: true
          pattern: patterns/blocked-countries
        annotations: |-
          haproxy.org/server-ssl: "false"             # The backend (server) is http
          haproxy.org/timeout-client: 239s            # 4 min timeout on azure
          haproxy.org/timeout-server: 239s
          haproxy.org/timeout-http-keep-alive: 120s
          haproxy.org/abortonclose: "true"
          haproxy.org/backend-config-snippet: |-
            http-reuse aggressive
            dynamic-cookie-key {{ include "fog-view.grpcCookieSalt" . }}
            cookie VIEW insert indirect nocache dynamic

      grpc:
        annotations: |-
          haproxy.org/server-proto: "h2"              # Force GRPC/H2 mode

      http:
        annotations: |-
          haproxy.org/path-rewrite: '/gw/(.*) /\1'    # Strip the /gw prefix

    configMap:
      data:
        PLACEHOLDER: 'empty'

  store:
    replicaCount: 1

    image:
      org: ''
      name: fogview
      pullPolicy: Always

    rust:
      backtrace: full
      log: info,rustls=warn,hyper=warn,tokio_reactor=warn,mio=warn,want=warn,reqwest=warn,rusoto_core=error,rusoto_signature=error,h2=error,rocket=warn,<unknown>=warn

    podAnnotations:
      fluentbit.io/include: 'true' # collect logs with fluentbit
      fluentbit.io/exclude-jaeger-agent: 'true'
      # This is the container name that needs to use sgx resources
      sgx.intel.com/quote-provider: fog-view-store

    # disable affinity rules for single node testing
    podManagementPolicy: Parallel
    affinityEnabled: true
    topologySpreadConstraintsEnabled: true

    ### Intel SGX extended resources are defined with: https://github.com/sebva/sgx-device-plugin
    resources:
      limits:
        sgx.intel.com/epc: 512Ki
        memory: 5Gi
      requests:
        sgx.intel.com/epc: 512Ki
        memory: 5Gi
        cpu: 1100m

    nodeSelector:
      dcap: 'true'

    tolerations:
    - key: dcap
      operator: Equal
      value: 'true'
      effect: NoSchedule

    configMap:
      data:
        # https://docs.diesel.rs/diesel/r2d2/struct.Builder.html
        POSTGRES_IDLE_TIMEOUT: '60'
        POSTGRES_MAX_LIFETIME: '120'
        POSTGRES_CONNECTION_TIMEOUT: '5'
        POSTGRES_MAX_CONNECTIONS: '3'
        MC_OMAP_CAPACITY: '4194304'

  ### These configmaps and secrets must be deployed by external process to the namespace.
  # override the name of the required configmaps
  externalConfigMaps:
    # Sentry is Optional
    sentry:
      name: sentry
      ### required keys:
      #   fog-view-sentry-dsn
    postgresReader:
      name: fog-recovery-reader-0-postgresql
      ### required keys:
      #   postgresql-ssl-options
      #   postgresql-database
      #   postgresql-username
      #   postgresql-hostname

  # override the name of the required secrets
  externalSecrets:
    postgresReader:
      name: fog-recovery-reader-0-postgresql
      ### required keys:
      #   postgresql-password
    ias:
      name: ias
      ### required keys:
      #   MC_IAS_API_KEY
      #   MC_IAS_SPID


grpcGateway:
  image:
    org: ''
    name: go-grpc-gateway
    pullPolicy: Always

  resources:
    limits:
      cpu: 1
      memory: 256Mi
    requests:
      cpu: 256m
      memory: 256Mi

jaegerTracing:
  enabled: false

jaegerAgent: |-
  - name: jaeger-agent
    image: jaegertracing/jaeger-agent:latest
    imagePullPolicy: IfNotPresent
    ports:
      - containerPort: 5775
        name: zk-compact-trft
        protocol: UDP
      - containerPort: 5778
        name: config-rest
        protocol: TCP
      - containerPort: 6831
        name: jg-compact-trft
        protocol: UDP
      - containerPort: 6832
        name: jg-binary-trft
        protocol: UDP
      - containerPort: 14271
        name: admin-http
        protocol: TCP
    env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
    args:
      - --reporter.grpc.host-port=dns:///jaeger-collector:14250
      - --reporter.type=grpc
      - --agent.tags=cluster=undefined,container.name=fog-view,deployment.name={{ include "fog-view-fsg.fullname" $ }},host.ip=${HOST_IP:},pod.name=${POD_NAME:},pod.namespace={{ $.Release.Namespace }}
