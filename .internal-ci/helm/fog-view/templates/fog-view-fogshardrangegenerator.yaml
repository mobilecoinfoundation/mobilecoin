# Copyright (c) 2018-2023 The MobileCoin Foundation
{{- $stackConfig := (include "fog-view.stackConfig" . | fromYaml) }}
{{- range $stack := until (int $stackConfig.count) }}
apiVersion: mc.mobilecoin.com/v1
kind: FogShardRangeGenerator
metadata:
  name: {{ include "fog-view.fullname" $ }}-{{ $stack }}
  labels:
    {{- include "fog-view.labels" $ | nindent 4 }}
spec:
  {{- with $stackConfig }}
  shardSize: {{ .shardSize }}
  exceedBlockHeightBy: {{ .exceedBlockHeightBy }}
  shardOverlap: {{ .shardOverlap }}
  {{- with .blockHeightRetrieval }}
  blockCountURL: {{ tpl .blockCountURL $ | quote }}
  blockCountQueryInterval: {{ .queryInterval | quote }}
  blockCountResponseJQ: {{ .responseJQ | quote }}
  blockCountReqBody: {{ .requestBody | quote }}
  {{- end }}
  {{- end }}

  router:
    templates:
    {{- range $routerHosts := $.Values.fogView.router.hosts }}
    {{- with $.Values.fogView.router }}
    - templateID: {{ $routerHosts.partner }}
      containerName: fog-view-router
      spec:
        podManagementPolicy: {{ .podManagementPolicy }}
        replicas: {{ .replicaCount }}
        selector:
          matchLabels:
            app: fog-view-router
            stack: fog-view-{{ $stack }}
            partner: {{ $routerHosts.partner }}
            {{- include "fog-view.selectorLabels" $ | nindent 12 }}
        serviceName: {{ include "fog-view.fullname" $ }}-router-{{ $routerHosts.partner }}
        template:
          metadata:
            annotations:
              {{- toYaml .podAnnotations | nindent 14 }}
            labels:
              app: fog-view-router
              stack: fog-view-{{ $stack }}
              partner: {{ $routerHosts.partner }}
              {{- include "fog-view.labels" $ | nindent 14 }}
          spec:
            {{- if .affinityEnabled }}
            affinity:
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - key: stack
                      operator: In
                      values:
                      - fog-view-{{ $stack }}
                  topologyKey: topology.kubernetes.io/zone
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - key: stack
                        operator: In
                        values:
                        - fog-view-{{ $stack }}
                    topologyKey: "kubernetes.io/hostname"
                  weight: 1
            {{- end }}
            imagePullSecrets:
            {{- toYaml $.Values.imagePullSecrets | nindent 12 }}
            initContainers:
            - name: sysctl
              image: ubuntu:20.04
              command:
              - sysctl
              - -w
              - net.ipv4.tcp_retries2=5
              - net.core.somaxconn=65535
              securityContext:
                privileged: true
                runAsUser: 0
                runAsNonRoot: False
            containers:
            - name: fog-view-router
              image: "{{ .image.org | default $.Values.image.org }}/{{ .image.name }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
              imagePullPolicy: {{ .image.pullPolicy }}
              args: [ "/usr/bin/supervisord" ]
              ports:
              - name: view-grpc
                containerPort: 3225
              - name: mgmt-http
                containerPort: 8000
              envFrom:
              - configMapRef:
                  name: {{ include "fog-view.fullname" $ }}-router
              startupProbe:
                grpc:
                  port: 3225
                failureThreshold: 240
                periodSeconds: 30
                timeoutSeconds: 1
                successThreshold: 1
              livenessProbe:
                grpc:
                  port: 3225
                failureThreshold: 5
                periodSeconds: 30
                successThreshold: 1
                timeoutSeconds: 1
              readinessProbe:
                grpc:
                  port: 3225
                failureThreshold: 2
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              env:
              - name: RUST_BACKTRACE
                value: {{ .rust.backtrace | quote }}
              {{- if eq $.Values.jaegerTracing.enabled true }}
              - name: MC_TELEMETRY
                value: "true"
              {{- end }}
              - name: RUST_LOG
                value: {{ .rust.log | quote }}
              - name: MC_CLIENT_RESPONDER_ID
                value: {{ $routerHosts.responderID }}:443
              - name: MC_CLIENT_LISTEN_URI
                value: insecure-fog-view://0.0.0.0:3225/
              - name: MC_ADMIN_LISTEN_URI
                value: insecure-mca://127.0.0.1:8001/
              - name: MC_SENTRY_DSN
                valueFrom:
                  configMapKeyRef:
                    name: sentry
                    key: fog-view-sentry-dsn
                    optional: true
              # Maps to Sentry Environment
              - name: MC_BRANCH
                value: {{ $.Values.mobilecoin.network }}
              - name: MC_CHAIN_ID
                value: {{ $.Values.mobilecoin.network }}
              volumeMounts:
              - name: supervisor-conf
                mountPath: /etc/supervisor/conf.d
                readOnly: true
              - mountPath: /var/run/aesmd
                name: aesm-socket-dir
              resources:
                {{- toYaml .resources | nindent 16 }}
            - name: grpc-gateway
              image: "{{ $.Values.grpcGateway.image.org | default $.Values.image.org }}/{{ $.Values.grpcGateway.image.name }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
              imagePullPolicy: Always
              command:
              - /usr/bin/go-grpc-gateway
              - -grpc-server-endpoint=127.0.0.1:3225
              - -grpc-insecure
              - -http-server-listen=:8225
              - -logtostderr
              ports:
              - name: view-http
                containerPort: 8225
              resources:
                {{- toYaml $.Values.grpcGateway.resources | nindent 16 }}
            {{- if eq $.Values.jaegerTracing.enabled true }}
            - name: jaeger-agent
              image: jaegertracing/jaeger-agent:latest
              imagePullPolicy: IfNotPresent
              ports:
              - containerPort: 5775
                name: zk-compact-trft
                protocol: UDP
              - containerPort: 5778
                name: config-rest
                protocol: TCP
              - containerPort: 6831
                name: jg-compact-trft
                protocol: UDP
              - containerPort: 6832
                name: jg-binary-trft
                protocol: UDP
              - containerPort: 14271
                name: admin-http
                protocol: TCP
              env:
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              - name: HOST_IP
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: status.hostIP
              args:
              - --reporter.grpc.host-port=dns:///jaeger-collector:14250
              - --reporter.type=grpc
              - --agent.tags=cluster=undefined,container.name=fog-view-router,deployment.name={{ include "fog-view.fullname" $ }},host.ip=${HOST_IP:},pod.name=${POD_NAME:},pod.namespace={{ $.Release.Namespace }}
            {{- end }}
            nodeSelector:
              {{- toYaml .nodeSelector | nindent 14 }}
            tolerations:
            {{- toYaml .tolerations | nindent 12 }}
            readinessGates:
            - conditionType: mobilecoin.com/shards-ready
            volumes:
            - emptyDir: {}
              name: aesm-socket-dir
            - name: supervisor-conf
              projected:
                defaultMode: 420
                sources:
                - configMap:
                    name: {{ include "fog-view.fullname" $ }}-supervisord-fog-view-router
                - configMap:
                    name: {{ include "fog-view.fullname" $ }}-supervisord-daemon
                - configMap:
                    name: {{ include "fog-view.fullname" $ }}-supervisord-admin
    {{- end }}
    {{- end }}

  {{- with $.Values.fogView.store }}
  store:
    containerName: fog-view-store
    servicePort: 80
    targetPort: view-grpc
    spec:
      podManagementPolicy: {{ .podManagementPolicy }}
      replicas: {{ .replicaCount }}
      selector:
        matchLabels:
          app: fog-view-store
          stack: fog-view-{{ $stack }}
          {{- include "fog-view.selectorLabels" $ | nindent 10 }}
      serviceName: {{ include "fog-view.fullname" $ }}-store
      template:
        metadata:
          annotations:
            {{- toYaml .podAnnotations | nindent 12 }}
          labels:
            app: fog-view-store
            stack: fog-view-{{ $stack }}
            {{- include "fog-view.labels" $ | nindent 12 }}
        spec:
          {{- if .topologySpreadConstraintsEnabled }}
          # Stacks launch first.
          # Make sure each stack is scheduled on different zones.
          # Then try to keep a stack on the minimal amount of nodes possible in a single zone.
          topologySpreadConstraints:
          - topologyKey: topology.kubernetes.io/zone
            maxSkew: 1
            whenUnsatisfiable: ScheduleAnyway
            labelSelector:
              matchLabels:
                stack: fog-view-{{ $stack }}
          {{- end }}
          {{- if .affinityEnabled }}
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: stack
                    operator: In
                    values:
                    - fog-view-{{ $stack }}
                topologyKey: topology.kubernetes.io/zone
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: stack
                      operator: In
                      values:
                      - fog-view-{{ $stack }}
                  topologyKey: "kubernetes.io/hostname"
                weight: 1
          {{- end }}
          imagePullSecrets:
          {{- toYaml $.Values.imagePullSecrets | nindent 10 }}
          initContainers:
          - name: sysctl
            image: ubuntu:20.04
            command:
            - sysctl
            - -w
            - net.ipv4.tcp_retries2=5
            - net.core.somaxconn=65535
            securityContext:
              privileged: true
              runAsUser: 0
              runAsNonRoot: False
          containers:
          - name: fog-view-store
            image: "{{ .image.org | default $.Values.image.org }}/{{ .image.name }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
            imagePullPolicy: {{ .image.pullPolicy }}
            args: [ "/usr/bin/supervisord" ]
            ports:
            - name: view-grpc
              containerPort: 3225
            - name: mgmt-http
              containerPort: 8000
            envFrom:
            - configMapRef:
                name: {{ include "fog-view.fullname" $ }}-store
            env:
            {{- if eq $.Values.jaegerTracing.enabled true }}
            - name: MC_TELEMETRY
              value: "true"
            {{- end }}
            - name: RUST_BACKTRACE
              value: {{ .rust.backtrace | quote }}
            - name: RUST_LOG
              value: {{ .rust.log | quote }}
            - name: MC_SENTRY_DSN
              valueFrom:
                configMapKeyRef:
                  name: sentry
                  key: fog-view-sentry-dsn
                  optional: true
            # Maps to Sentry Environment
            - name: MC_BRANCH
              value: {{ $.Values.mobilecoin.network }}
            - name: MC_CHAIN_ID
              value: {{ $.Values.mobilecoin.network }}
            - name: FOGDB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ $.Values.fogView.externalConfigMaps.postgresReader.name }}
                  key: postgres-hostname
            - name: FOGDB_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ $.Values.fogView.externalConfigMaps.postgresReader.name }}
                  key: postgres-username
            - name: FOGDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.fogView.externalSecrets.postgresReader.name }}
                  key: postgres-password
            - name: FOGDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ $.Values.fogView.externalConfigMaps.postgresReader.name }}
                  key: postgres-database
            - name: FOGDB_SSL_OPTIONS
              valueFrom:
                configMapKeyRef:
                  name: {{ $.Values.fogView.externalConfigMaps.postgresReader.name }}
                  key: postgres-ssl-options
            - name: DATABASE_URL
              value: "postgres://$(FOGDB_USER):$(FOGDB_PASSWORD)@$(FOGDB_HOST)/$(FOGDB_DATABASE)$(FOGDB_SSL_OPTIONS)"
            livenessProbe:
              grpc:
                port: 3225
              failureThreshold: 5
              periodSeconds: 30
              timeoutSeconds: 1
              successThreshold: 1
            startupProbe:
              grpc:
                port: 3225
              failureThreshold: 480
              periodSeconds: 30
              timeoutSeconds: 1
              successThreshold: 1
            readinessProbe:
              grpc:
                port: 3225
              failureThreshold: 2
              periodSeconds: 10
              timeoutSeconds: 1
              successThreshold: 1
            volumeMounts:
            - name: supervisor-conf
              mountPath: /etc/supervisor/conf.d
              readOnly: true
            - mountPath: /var/run/aesmd
              name: aesm-socket-dir
            resources:
              {{- toYaml .resources | nindent 14 }}
          {{- if eq $.Values.jaegerTracing.enabled true }}
          - name: jaeger-agent
            image: jaegertracing/jaeger-agent:latest
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 5775
                name: zk-compact-trft
                protocol: UDP
              - containerPort: 5778
                name: config-rest
                protocol: TCP
              - containerPort: 6831
                name: jg-compact-trft
                protocol: UDP
              - containerPort: 6832
                name: jg-binary-trft
                protocol: UDP
              - containerPort: 14271
                name: admin-http
                protocol: TCP
            env:
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              - name: HOST_IP
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: status.hostIP
            args:
              - --reporter.grpc.host-port=dns:///jaeger-collector:14250
              - --reporter.type=grpc
              - --agent.tags=cluster=undefined,container.name=fog-view,deployment.name={{ include "fog-view.fullname" $ }},host.ip=${HOST_IP:},pod.name=${POD_NAME:},pod.namespace={{ $.Release.Namespace }}
          {{- end }}
          nodeSelector:
            {{- toYaml .nodeSelector | nindent 12 }}
          tolerations:
          {{- toYaml .tolerations | nindent 10 }}
          volumes:
          - emptyDir: {}
            name: aesm-socket-dir
          - name: supervisor-conf
            projected:
              sources:
              - configMap:
                  name: {{ include "fog-view.fullname" $ }}-supervisord-daemon
              - configMap:
                  name: {{ include "fog-view.fullname" $ }}-supervisord-fog-view-store
              - configMap:
                  name: {{ include "fog-view.fullname" $ }}-supervisord-admin
  {{- end }}
---
{{- end }}
