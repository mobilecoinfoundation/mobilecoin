# Copyright (c) 2018-2022 The MobileCoin Foundation
apiVersion: mc.mobilecoin.com/v1
kind: FogShardRangeGenerator
metadata:
  name: {{ include "fogServices.fullname" . }}-fog-view
  labels:
    {{- include "fogServices.labels" . | nindent 4 }}
spec:
  {{- toYaml .Values.fogViewStores | nindent 2 }}
  blockCountURL: {{ include "fogServices.blockHeightURL" . | quote }}
  {{- with .Values.blockHeighRetrieval }}
  blockCountQueryInterval: {{ .queryInterval | quote }}
  blockCountResponseJQ: {{ .responseJQ | quote }}
  blockCountReqBody: {{ .requestBody | quote }}
  {{- end }}
  router:
    template:
      containerName: fog-view-router
      spec:
        podManagementPolicy: {{ .Values.fogViewRouter.podManagementPolicy }}
        replicas: {{ .Values.fogViewRouter.replicaCount }}
        selector:
          matchLabels:
            app: fog-view-router
            {{- include "fogServices.selectorLabels" . | nindent 12 }}
        serviceName: {{ include "fogServices.fullname" . }}-fog-view-router
        template:
          metadata:
            annotations:
              {{- toYaml .Values.fogViewRouter.podAnnotations | nindent 14 }}
            labels:
              app: fog-view-router
              {{- include "fogServices.labels" . | nindent 14 }}
          spec:
            volumes:
            - emptyDir: {}
              name: aesm-socket-dir
            - name: supervisor-conf
              projected:
                defaultMode: 420
                sources:
                - configMap:
                    name: {{ include "fogServices.fullname" . }}-supervisord-fog-view-router
                - configMap:
                    name: {{ include "fogServices.fullname" . }}-supervisord-sgx
                - configMap:
                    name: {{ include "fogServices.fullname" . }}-supervisord-daemon
            nodeSelector:
              {{- toYaml .Values.fogViewRouter.nodeSelector | nindent 14 }}
            tolerations:
              {{- toYaml .Values.fogViewRouter.tolerations | nindent 14 }}
            affinity:
              {{- toYaml .Values.fogViewRouter.affinity | nindent 14 }}
            topologySpreadConstraints:
            - topologyKey: topology.kubernetes.io/zone
              maxSkew: 1
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app: fog-view-router
                  helm.sh/chart: {{ include "fogServices.chart" . }}
                  {{- include "fogServices.selectorLabels" . | nindent 18 }}
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - topologyKey: kubernetes.io/hostname
                  labelSelector:
                    app: fog-view-router
                    helm.sh/chart: {{ include "fogServices.chart" . }}
                    {{- include "fogServices.selectorLabels" . | nindent 20 }}
            imagePullSecrets:
            {{- toYaml .Values.imagePullSecrets | nindent 12 }}
            containers:
            - name: fog-view-router
              image: "{{ .Values.fogViewRouter.image.org | default .Values.image.org }}/{{ .Values.fogViewRouter.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.fogViewRouter.image.pullPolicy }}
              command: [ "/usr/bin/supervisord", "-n" ]
              ports:
              - name: view-grpc
                containerPort: 3225
              - name: mgmt-http
                containerPort: 8000
              envFrom:
              - configMapRef:
                  # This is pre-installed from the fog-services-config chart or Terraform
                  name: fog-view
              - secretRef:
                  name: ias
              livenessProbe:
                grpc:
                  port: 3225
                failureThreshold: 5
                periodSeconds: 30
                successThreshold: 1
                timeoutSeconds: 1
              readinessProbe:
                grpc:
                  port: 3225
                failureThreshold: 2
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              env:
              - name: RUST_BACKTRACE
                value: {{ .Values.fogViewRouter.rust.backtrace | quote }}
              - name: RUST_LOG
                value: {{ .Values.fogViewRouter.rust.log | quote }}
              - name: CLIENT_AUTH_TOKEN_SECRET
                valueFrom:
                  secretKeyRef:
                    name: client-auth-token
                    key: token
                    optional: true
              - name: MC_CLIENT_RESPONDER_ID
                value: {{ include "fogServices.fogPublicFQDN" . }}:443
              - name: MC_CLIENT_LISTEN_URI
                value: insecure-fog-view://0.0.0.0:3225/
              - name: FOG_VIEW_SENTRY_DSN
                valueFrom:
                  configMapKeyRef:
                    name: sentry
                    key: fog-view-sentry-dsn
              - name: MC_CHAIN_ID
                valueFrom:
                  configMapKeyRef:
                    name: mobilecoin-network
                    key: network
              volumeMounts:
              - name: supervisor-conf
                mountPath: /etc/supervisor/conf.d
                readOnly: true
              - mountPath: /var/run/aesmd
                name: aesm-socket-dir
              resources:
                {{- toYaml .Values.fogViewRouter.resources | nindent 16 }}
            - name: grpc-gateway
              image: "{{ .Values.grpcGateway.image.org | default .Values.image.org }}/{{ .Values.grpcGateway.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: Always
              command:
              - /usr/bin/go-grpc-gateway
              - -grpc-server-endpoint=127.0.0.1:3225
              - -grpc-insecure
              - -http-server-listen=:8225
              - -logtostderr
              ports:
                - name: view-http
                  containerPort: 8225
              resources:
                {{- toYaml .Values.grpcGateway.resources | nindent 16 }}
            {{- if eq .Values.jaegerTracing.enabled true }}
            - name: jaeger-agent
              image: jaegertracing/jaeger-agent:latest
              imagePullPolicy: IfNotPresent
              ports:
                - containerPort: 5775
                  name: zk-compact-trft
                  protocol: UDP
                - containerPort: 5778
                  name: config-rest
                  protocol: TCP
                - containerPort: 6831
                  name: jg-compact-trft
                  protocol: UDP
                - containerPort: 6832
                  name: jg-binary-trft
                  protocol: UDP
                - containerPort: 14271
                  name: admin-http
                  protocol: TCP
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: HOST_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.hostIP
              args:
                - --reporter.grpc.host-port={{ .Values.jaegerTracing.collector }}
                - --reporter.type=grpc
                - --agent.tags=cluster=undefined,container.name=fog-view-router,deployment.name={{ include "fogServices.fullname" . }},host.ip=${HOST_IP:},pod.name=${POD_NAME:},pod.namespace={{ .Release.Namespace }}
            {{- end }}
        
  store:
    containerName: fog-view-store
    servicePort: 80
    targetPort: view-grpc
    spec:
      replicas: {{ .Values.fogView.replicaCount }}
      selector:
        matchLabels:
          app: fog-view-store
          {{- include "fogServices.selectorLabels" . | nindent 10 }}
      serviceName: {{ include "fogServices.fullname" . }}-fog-view-store
      template:
        metadata:
          annotations:
            {{- toYaml .Values.fogView.podAnnotations | nindent 12 }}
          labels:
            app: fog-view-store
            {{- include "fogServices.labels" . | nindent 12 }}
        spec:
          # TODO: constraints, affinity used fog-view; but selector used fog-view-store?
          topologySpreadConstraints:
          - topologyKey: topology.kubernetes.io/zone
            maxSkew: 1
            whenUnsatisfiable: DoNotSchedule
            labelSelector:
              matchLabels:
                app: fog-view-store
                helm.sh/chart: {{ include "fogServices.chart" . }}
                {{- include "fogServices.selectorLabels" . | nindent 16 }}
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - topologyKey: kubernetes.io/hostname
                labelSelector:
                  app: fog-view-store
                  helm.sh/chart: {{ include "fogServices.chart" . }}
                  {{- include "fogServices.selectorLabels" . | nindent 18 }}
          imagePullSecrets:
          {{- toYaml .Values.imagePullSecrets | nindent 10 }}
          initContainers:
          - name: sysctl
            image: ubuntu:20.04
            command:
            - sysctl
            - -w
            - net.ipv4.tcp_retries2=5
            - net.core.somaxconn=65535
            securityContext:
              privileged: true
              runAsUser: 0
              runAsNonRoot: False
          containers:
          - name: fog-view-store
            image: "{{ .Values.fogView.image.org | default .Values.image.org }}/{{ .Values.fogView.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.fogView.image.pullPolicy }}
            command: [ "/usr/bin/supervisord" ]
            ports:
            - name: view-grpc
              containerPort: 3225
            - name: mgmt-http
              containerPort: 8000
            envFrom:
            - configMapRef:
                name: fog-view
            - secretRef:
                name: ias
            env:
            - name: RUST_BACKTRACE
              value: {{ .Values.fogView.rust.backtrace | quote }}
            - name: RUST_LOG
              value: {{ .Values.fogView.rust.log | quote }}
            - name: CLIENT_AUTH_TOKEN_SECRET
              valueFrom:
                secretKeyRef:
                  name: client-auth-token
                  key: token
                  optional: true
            - name: FOG_VIEW_SENTRY_DSN
              valueFrom:
                configMapKeyRef:
                  name: sentry
                  key: fog-view-sentry-dsn
            # Maps to Sentry Environment
            - name: MC_BRANCH
              valueFrom:
                configMapKeyRef:
                  name: mobilecoin-network
                  key: network
            - name: MC_CHAIN_ID
              valueFrom:
                configMapKeyRef:
                  name: mobilecoin-network
                  key: network
            - name: FOGDB_HOST
              valueFrom:
                configMapKeyRef:
                  name: fog-recovery-reader-0-postgresql
                  key: postgresql-hostname
            - name: FOGDB_USER
              valueFrom:
                configMapKeyRef:
                  name: fog-recovery-reader-0-postgresql
                  key: postgresql-username
            - name: FOGDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fog-recovery-postgresql
                  key: postgresql-password
            - name: FOGDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: fog-recovery-reader-0-postgresql
                  key: postgresql-database
            - name: FOGDB_SSL_OPTIONS
              valueFrom:
                configMapKeyRef:
                  name: fog-recovery-reader-0-postgresql
                  key: postgresql-ssl-options
            - name: DATABASE_URL
              value: "postgres://$(FOGDB_USER):$(FOGDB_PASSWORD)@$(FOGDB_HOST)/$(FOGDB_DATABASE)$(FOGDB_SSL_OPTIONS)"
            # Hold liveness and readiness until this probe passes.
            startupProbe:
              grpc:
                port: 3225
              failureThreshold: 480
              periodSeconds: 30
            # Will wait for startup probe to succeed. When this passes k8s won't kill the service.
            livenessProbe:
              grpc:
                port: 3225
              failureThreshold: 5
              periodSeconds: 30
            # Will wait for startup probe to succeed. When this passes services/ingress will pass traffic
            readinessProbe:
              grpc:
                port: 3225
              failureThreshold: 2
              periodSeconds: 10
            volumeMounts:
            - name: supervisor-conf
              mountPath: /etc/supervisor/conf.d
              readOnly: true
            - mountPath: /var/run/aesmd
              name: aesm-socket-dir
            resources:
              {{- toYaml .Values.fogView.resources | nindent 14 }}
          {{- if eq .Values.jaegerTracing.enabled true }}
          - name: jaeger-agent
            image: jaegertracing/jaeger-agent:latest
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 5775
                name: zk-compact-trft
                protocol: UDP
              - containerPort: 5778
                name: config-rest
                protocol: TCP
              - containerPort: 6831
                name: jg-compact-trft
                protocol: UDP
              - containerPort: 6832
                name: jg-binary-trft
                protocol: UDP
              - containerPort: 14271
                name: admin-http
                protocol: TCP
            env:
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              - name: HOST_IP
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: status.hostIP
            args:
              - --reporter.grpc.host-port={{ .Values.jaegerTracing.collector }}
              - --reporter.type=grpc
              - --agent.tags=cluster=undefined,container.name=fog-view,deployment.name={{ include "fogServices.fullname" . }},host.ip=${HOST_IP:},pod.name=${POD_NAME:},pod.namespace={{ .Release.Namespace }}
          {{- end }}
          nodeSelector:
            {{- toYaml .Values.fogView.nodeSelector | nindent 12 }}
          tolerations:
            {{- toYaml .Values.fogView.tolerations | nindent 12 }}
          affinity:
            {{- toYaml .Values.fogView.affinity | nindent 12 }}
          volumes:
          - emptyDir: {}
            name: aesm-socket-dir
          - name: supervisor-conf
            projected:
              sources:
              - configMap:
                  name: {{ include "fogServices.fullname" . }}-supervisord-sgx
              - configMap:
                  name: {{ include "fogServices.fullname" . }}-supervisord-daemon
              - configMap:
                  name: {{ include "fogServices.fullname" . }}-supervisord-fog-view-store
              - configMap:
                  name: {{ include "fogServices.fullname" . }}-supervisord-admin
