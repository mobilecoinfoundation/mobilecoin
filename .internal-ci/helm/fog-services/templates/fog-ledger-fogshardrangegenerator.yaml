# Copyright (c) 2018-2022 The MobileCoin Foundation
{{- $stacks := until (int .Values.fogLedgerShardRangeGenerator.count) }}
{{- range $stacks }}
apiVersion: mc.mobilecoin.com/v1
kind: FogShardRangeGenerator
metadata:
  name: {{ include "fogServices.fullname" $ }}-fog-ledger-{{ . }}
  labels:
    {{- include "fogServices.labels" $ | nindent 4 }}
spec:
  {{- include "fogServices.fogLedgerStores" $ | nindent 2 }}
  blockCountURL: {{ include "fogServices.blockHeightURL" $ | quote }}
  {{- with $.Values.blockHeighRetrieval }}
  blockCountQueryInterval: {{ .queryInterval | quote }}
  blockCountResponseJQ: {{ .responseJQ | quote }}
  blockCountReqBody: {{ .requestBody | quote }}
  {{- end }}
  router:
    shardingScheme: insecure-key-image-store
    shardingStrategyEnvName: MC_KEY_IMAGE_SHARD_URIS
    template:
      containerName: fog-ledger-router
      spec:
        podManagementPolicy: {{ $.Values.fogLedgerRouter.podManagementPolicy }}
        replicas: {{ $.Values.fogLedgerRouter.replicaCount }}
        selector:
          matchLabels:
            app: fog-ledger-router
            stack: fog-ledger-{{ . }}
            {{- include "fogServices.selectorLabels" $ | nindent 12 }}
        serviceName: {{ include "fogServices.fullname" $ }}-fog-ledger
        template:
          metadata:
            annotations:
              {{- toYaml $.Values.fogLedgerRouter.podAnnotations | nindent 14 }}
            labels:
              app: fog-ledger-router
              stack: fog-ledger-{{ . }}
              {{- include "fogServices.labels" $ | nindent 14 }}
          spec:
            # Prevent endpoint creation until all shards for this router are ready
            readinessGates:
            - conditionType: mobilecoin.com/shards-ready
            # Try to balance pods across zones
            {{- if $.Values.fogLedgerRouter.affinityEnabled }}
            affinity:
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - key: stack
                      operator: In
                      values:
                      - fog-ledger-{{ . }}
                  topologyKey: topology.kubernetes.io/zone
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - key: stack
                        operator: In
                        values:
                        - fog-ledger-{{ . }}
                    topologyKey: "kubernetes.io/hostname"
                  weight: 1
            {{- end }}
            imagePullSecrets:
            {{- toYaml $.Values.imagePullSecrets | nindent 12 }}
            terminationGracePeriodSeconds: 30
            dnsConfig:
              options:
              - name: ndots
                value: "1"
            initContainers:
            - name: sysctl
              image: ubuntu:20.04
              command:
              - sysctl
              - -w
              - net.ipv4.tcp_retries2=5
              - net.core.somaxconn=65535
              securityContext:
                privileged: true
                runAsUser: 0
                runAsNonRoot: False
            containers:
            - name: fog-ledger-router
              image: "{{ $.Values.fogLedgerRouter.image.org | default $.Values.image.org }}/{{ $.Values.fogLedgerRouter.image.name }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
              imagePullPolicy: {{ $.Values.fogLedger.image.pullPolicy }}
              args: [ "/usr/bin/supervisord" ]
              ports:
              - name: ledger-grpc
                containerPort: 3228
              - name: mgmt-http
                containerPort: 8000
              envFrom:
              - secretRef:
                  name: ias
              - configMapRef:
                  # This is installed from the fog-services-config chart or Terraform
                  name: fog-ledger
              - secretRef:
                  name: ipinfo
                  optional: true
              env:
              - name: MC_LEDGER_DB_MIGRATE
                value: "true"
              - name: RUST_BACKTRACE
                value: {{ $.Values.fogLedgerRouter.rust.backtrace | quote }}
              - name: RUST_LOG
                value: {{ $.Values.fogLedgerRouter.rust.log | quote }}
              - name: FOG_LEDGER_SENTRY_DSN
                valueFrom:
                  configMapKeyRef:
                    name: sentry
                    key: fog-ledger-sentry-dsn
              # Maps to Sentry Environment
              - name: MC_BRANCH
                valueFrom:
                  configMapKeyRef:
                    name: mobilecoin-network
                    key: network
              - name: MC_CHAIN_ID
                valueFrom:
                  configMapKeyRef:
                    name: mobilecoin-network
                    key: network
              - name: CLIENT_AUTH_TOKEN_SECRET
                valueFrom:
                  secretKeyRef:
                    name: client-auth-token
                    key: token
                    optional: true
              - name: CLIENT_RESPONDER_ID
                value: "{{ include "fogServices.fogPublicFQDN" $ }}:443"
              startupProbe:
                grpc:
                  port: 3228
                # Wait up to 2 hours for startup
                failureThreshold: 240
                periodSeconds: 30
                successThreshold: 1
                timeoutSeconds: 1
              livenessProbe:
                grpc:
                  port: 3228
                failureThreshold: 4
                periodSeconds: 30
                successThreshold: 1
                timeoutSeconds: 1
              readinessProbe:
                grpc:
                  port: 3228
                failureThreshold: 2
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              volumeMounts:
              - name: fog-data
                mountPath: /fog-data
              - name: aesm-socket-dir
                mountPath: /var/run/aesmd
              - name: supervisor-conf
                mountPath: /etc/supervisor/conf.d
                readOnly: true
              - name: tmp
                mountPath: /tmp
              resources:
                {{- toYaml $.Values.fogLedgerRouter.resources | nindent 16 }}
            - name: grpc-gateway
              image: "{{ $.Values.grpcGateway.image.org | default $.Values.image.org }}/{{ $.Values.grpcGateway.image.name }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
              imagePullPolicy: Always
              command:
              - /usr/bin/go-grpc-gateway
              - -grpc-server-endpoint=127.0.0.1:3228
              - -grpc-insecure
              - -http-server-listen=:8228
              - -logtostderr
              ports:
                - name: ledger-http
                  containerPort: 8228
              resources:
                {{- toYaml $.Values.grpcGateway.resources | nindent 16 }}
            {{- if eq $.Values.jaegerTracing.enabled true }}
            - name: jaeger-agent
              image: jaegertracing/jaeger-agent:latest
              imagePullPolicy: IfNotPresent
              ports:
                - containerPort: 5775
                  name: zk-compact-trft
                  protocol: UDP
                - containerPort: 5778
                  name: config-rest
                  protocol: TCP
                - containerPort: 6831
                  name: jg-compact-trft
                  protocol: UDP
                - containerPort: 6832
                  name: jg-binary-trft
                  protocol: UDP
                - containerPort: 14271
                  name: admin-http
                  protocol: TCP
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: HOST_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.hostIP
              args:
                - --reporter.grpc.host-port={{ $.Values.jaegerTracing.collector }}
                - --reporter.type=grpc
                - --agent.tags=cluster=undefined,container.name=fog-ledger,deployment.name={{ include "fogServices.fullname" $ }},host.ip=${HOST_IP:},pod.name=${POD_NAME:},pod.namespace={{ $.Release.Namespace }}
            {{- end }}
            nodeSelector:
              {{- toYaml $.Values.fogLedgerRouter.nodeSelector | nindent 14 }}
            tolerations:
              {{- toYaml $.Values.fogLedgerRouter.tolerations | nindent 14 }}
            volumes:
            {{- if eq $.Values.fogLedgerRouter.persistence.enabled false }}
            - name: fog-data
              emptyDir: {}
            {{- end }}
            - name: tmp
              emptyDir: {}
            - name: aesm-socket-dir
              emptyDir: {}
            - name: supervisor-conf
              projected:
                sources:
                - configMap:
                    name: {{ include "fogServices.fullname" $ }}-supervisord-sgx
                - configMap:
                    name: {{ include "fogServices.fullname" $ }}-supervisord-daemon
                - configMap:
                    name: fog-supervisord-mobilecoind
                - configMap:
                    name: {{ include "fogServices.fullname" $ }}-supervisord-fog-ledger-router
                - configMap:
                    name: {{ include "fogServices.fullname" $ }}-supervisord-admin
        {{- if $.Values.fogLedgerRouter.persistence.enabled }}
        volumeClaimTemplates:
        - metadata:
            name: fog-data
          spec:
            {{- toYaml $.Values.fogLedgerRouter.persistence.spec | nindent 12 }}
        {{- end }}

  store:
    containerName: fog-ledger-store
    servicePort: 80
    targetPort: ledger-grpc
    spec:
      podManagementPolicy: {{ $.Values.fogLedger.podManagementPolicy }}
      replicas: {{ $.Values.fogLedger.replicaCount }}
      selector:
        matchLabels:
          app: fog-ledger-store
          stack: fog-ledger-{{ . }}
          {{- include "fogServices.selectorLabels" $ | nindent 10 }}
      serviceName: {{ include "fogServices.fullname" $ }}-fog-ledger-store
      template:
        metadata:
          annotations:
            {{- toYaml $.Values.fogLedger.podAnnotations | nindent 12 }}
          labels:
            app: fog-ledger-store
            stack: fog-ledger-{{ . }}
            {{- include "fogServices.labels" $ | nindent 12 }}
        spec:
          {{- if $.Values.fogLedger.topologySpreadConstraintsEnabled }}
          topologySpreadConstraints:
          - topologyKey: topology.kubernetes.io/zone
            maxSkew: 1
            whenUnsatisfiable: ScheduleAnyway
            labelSelector:
              matchLabels:
                app: fog-ledger-store
          {{- end }}
          {{- if $.Values.fogLedger.affinityEnabled }}
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: stack
                    operator: In
                    values:
                    - fog-ledger-{{ . }}
                topologyKey: topology.kubernetes.io/zone
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: stack
                      operator: In
                      values:
                      - fog-ledger-{{ . }}
                  topologyKey: "kubernetes.io/hostname"
                weight: 1
          {{- end }}
          imagePullSecrets:
          {{- toYaml $.Values.imagePullSecrets | nindent 10 }}
          terminationGracePeriodSeconds: 30
          dnsConfig:
            options:
            - name: ndots
              value: "1"
          initContainers:
          - name: sysctl
            image: ubuntu:20.04
            command:
            - sysctl
            - -w
            - net.ipv4.tcp_retries2=5
            - net.core.somaxconn=65535
            securityContext:
              privileged: true
              runAsUser: 0
              runAsNonRoot: False
          containers:
          - name: fog-ledger-store
            image: "{{ $.Values.fogLedger.image.org | default $.Values.image.org }}/{{ $.Values.fogLedger.image.name }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
            imagePullPolicy: {{ $.Values.fogLedger.image.pullPolicy }}
            args: [ "/usr/bin/supervisord" ]
            ports:
            - name: ledger-grpc
              containerPort: 3228
            - name: mgmt-http
              containerPort: 8000
            envFrom:
            - secretRef:
                name: ias
            - configMapRef:
                # Configmap is created by fog-services chart, or Terraform
                name: fog-ledger
            - secretRef:
                name: ipinfo
                optional: true
            env:
            - name: MC_LEDGER_DB_MIGRATE
              value: "true"
            - name: RUST_BACKTRACE
              value: {{ $.Values.fogLedger.rust.backtrace | quote }}
            - name: RUST_LOG
              value: {{ $.Values.fogLedger.rust.log | quote }}
            - name: FOG_LEDGER_SENTRY_DSN
              valueFrom:
                configMapKeyRef:
                  name: sentry
                  key: fog-ledger-sentry-dsn
            # Maps to Sentry Environment
            - name: MC_BRANCH
              valueFrom:
                configMapKeyRef:
                  name: mobilecoin-network
                  key: network
            - name: MC_CHAIN_ID
              valueFrom:
                configMapKeyRef:
                  name: mobilecoin-network
                  key: network
            livenessProbe:
              grpc:
                port: 3228
              failureThreshold: 5
              periodSeconds: 30
              timeoutSeconds: 1
              successThreshold: 1
            # Hold liveness and readiness until this probe passes.
            startupProbe:
              grpc:
                port: 3228
              # Wait up to 2 hours for startup
              failureThreshold: 240
              periodSeconds: 30
              timeoutSeconds: 1
              successThreshold: 1
            # Will wait for startup probe to succeed. When this passes services/ingress will pass traffic
            readinessProbe:
              grpc:
                port: 3228
              failureThreshold: 2
              periodSeconds: 10
              timeoutSeconds: 1
              successThreshold: 1
            volumeMounts:
            - name: aesm-socket-dir
              mountPath: /var/run/aesmd
            - name: fog-data
              mountPath: /fog-data
            - name: supervisor-conf
              mountPath: /etc/supervisor/conf.d
              readOnly: true
            - name: tmp
              mountPath: /tmp
            resources:
              {{- toYaml $.Values.fogLedger.resources | nindent 14 }}
          {{- if eq $.Values.jaegerTracing.enabled true }}
          - name: jaeger-agent
            image: jaegertracing/jaeger-agent:latest
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 5775
                name: zk-compact-trft
                protocol: UDP
              - containerPort: 5778
                name: config-rest
                protocol: TCP
              - containerPort: 6831
                name: jg-compact-trft
                protocol: UDP
              - containerPort: 6832
                name: jg-binary-trft
                protocol: UDP
              - containerPort: 14271
                name: admin-http
                protocol: TCP
            env:
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              - name: HOST_IP
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: status.hostIP
            args:
              - --reporter.grpc.host-port={{ $.Values.jaegerTracing.collector }}
              - --reporter.type=grpc
              - --agent.tags=cluster=undefined,container.name=fog-ledger,deployment.name={{ include "fogServices.fullname" $ }},host.ip=${HOST_IP:},pod.name=${POD_NAME:},pod.namespace={{ $.Release.Namespace }}
          {{- end }}
          nodeSelector:
            {{- toYaml $.Values.fogLedger.nodeSelector | nindent 12 }}
          tolerations:
            {{- toYaml $.Values.fogLedger.tolerations | nindent 12 }}
          volumes:
          {{- if eq $.Values.fogLedger.persistence.enabled false }}
          - name: fog-data
            emptyDir: {}
          {{- end }}
          - name: tmp
            emptyDir: {}
          - name: aesm-socket-dir
            emptyDir: {}
          - name: supervisor-conf
            projected:
              sources:
              - configMap:
                  name: {{ include "fogServices.fullname" $ }}-supervisord-sgx
              - configMap:
                  name: {{ include "fogServices.fullname" $ }}-supervisord-daemon
              - configMap:
                  name: fog-supervisord-mobilecoind
              - configMap:
                  name: {{ include "fogServices.fullname" $ }}-supervisord-fog-ledger-store
              - configMap:
                  name: {{ include "fogServices.fullname" $ }}-supervisord-admin
      {{- if $.Values.fogLedger.persistence.enabled }}
      volumeClaimTemplates:
      - metadata:
          name: fog-data
        spec:
          {{- toYaml $.Values.fogLedger.persistence.spec | nindent 10 }}
      {{- end }}
---
{{- end }}
